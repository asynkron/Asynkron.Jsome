name: Publish NuGet Package

on:
  push:
    tags:
      - 'v*'

jobs:
  publish:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build
      run: dotnet build --no-restore --configuration Release
      
    - name: Test
      run: dotnet test --no-build --configuration Release --verbosity normal
      
    - name: Extract version from tag
      id: get_version
      run: |
        TAG=${GITHUB_REF#refs/tags/v}
        echo "VERSION=$TAG" >> $GITHUB_OUTPUT
        echo "Version: $TAG"
        
    - name: Validate version format
      run: |
        if [[ ! "${{ steps.get_version.outputs.VERSION }}" =~ ^[0-9]+\.[0-9]+\.[0-9]+(-[a-zA-Z0-9.-]+)?$ ]]; then
          echo "Invalid version format: ${{ steps.get_version.outputs.VERSION }}"
          exit 1
        fi
        echo "Version format is valid: ${{ steps.get_version.outputs.VERSION }}"
        
    - name: Pack
      run: dotnet pack src/SwaggerGen/SwaggerGen.csproj --no-build --configuration Release --output ./nupkg -p:PackageVersion=${{ steps.get_version.outputs.VERSION }}
      
    - name: Verify package exists
      run: |
        if [ ! -f ./nupkg/*.nupkg ]; then
          echo "Package file not found!"
          exit 1
        fi
        ls -la ./nupkg/
        
    - name: Publish to NuGet
      run: dotnet nuget push ./nupkg/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate
      
    - name: Upload package artifact
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: nuget-package-${{ steps.get_version.outputs.VERSION }}
        path: ./nupkg/*.nupkg